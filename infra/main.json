{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "8971151654083351940"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "containerImage": {
      "type": "string",
      "metadata": {
        "description": "Docker image to deploy (e.g., ghcr.io/your-org/sms-api:latest)."
      }
    },
    "logRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Log Analytics workspace retention in days"
      }
    },
    "samplingPercentage": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Application Insights sampling percentage"
      }
    },
    "secrets": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "Key Vault secrets (as secure object)"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[format('sms-{0}', parameters('environmentName'))]",
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "storageAccountName": "[format('{0}{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]",
    "appServicePlanName": "[format('{0}-asp-{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]",
    "apiAppName": "[format('{0}-api-{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]",
    "logAnalyticsName": "[format('{0}-logs-{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]",
    "appInsightsName": "[format('{0}-insights-{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]",
    "keyVaultName": "[format('{0}-kv-{1}', variables('resourcePrefix'), variables('uniqueSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[parameters('logRetentionDays')]",
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
        "SamplingPercentage": "[parameters('samplingPercentage')]",
        "RetentionInDays": "[parameters('logRetentionDays')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('apiAppName')), '2022-09-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "copy": {
        "name": "keyVaultSecrets",
        "count": "[length(items(parameters('secrets')))]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), items(parameters('secrets'))[copyIndex()].key)]",
      "properties": {
        "value": "[items(parameters('secrets'))[copyIndex()].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[if(equals(parameters('environmentName'), 'prod'), 'P1v3', 'B1')]",
        "tier": "[if(equals(parameters('environmentName'), 'prod'), 'PremiumV3', 'Basic')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('apiAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux,container",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "[format('DOCKER|{0}', parameters('containerImage'))]",
          "alwaysOn": "[if(equals(parameters('environmentName'), 'prod'), true(), false())]",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "http20Enabled": true,
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://ghcr.io"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "LOG_LEVEL",
              "value": "[if(equals(parameters('environmentName'), 'prod'), 'WARNING', 'INFO')]"
            },
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environmentName')]"
            },
            {
              "name": "KEY_VAULT_URL",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-02-01').vaultUri]"
            }
          ],
          "healthCheckPath": "/health"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('apiAppName'))]",
      "name": "default",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
        "logs": [
          {
            "category": "AppServiceHTTPLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logRetentionDays')]"
            }
          },
          {
            "category": "AppServiceConsoleLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logRetentionDays')]"
            }
          },
          {
            "category": "AppServiceAppLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logRetentionDays')]"
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logRetentionDays')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('apiAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    }
  ],
  "outputs": {
    "apiEndpointUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('apiAppName')), '2022-09-01').defaultHostName)]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
    },
    "keyVaultUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-02-01').vaultUri]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}